-- In-depth Exploratory Data analysis (EDA) of Music Store sales data using the following Level of questions.

-- EASY

/* 1. Who is the senior most employee based on job title? */

SELECT last_name, first_name, title, levels
FROM employee
ORDER BY levels DESC
LIMIT 1;


/* 2. Which countries have the most Invoices? */

SELECT billing_country AS Country, COUNT(invoice_id) AS Invoices
FROM invoice
GROUP BY billing_country
ORDER BY COUNT(invoice_id) DESC;


/* 3. What are top 3 values of total invoice? */

SELECT ROUND(total,2) AS Total_Invoice
FROM invoice
ORDER BY total DESC
LIMIT 3;


/* 4. Which city has the best customers? We would like to throw a promotional Music Festival in the city we made the most money. 
Write a query that returns one city that has the highest sum of invoice totals. 
Return both the city name & sum of all invoice totals */

SELECT billing_city, ROUND(SUM(total),2) AS Invoice_total
FROM invoice
GROUP BY billing_city
ORDER BY SUM(total) DESC
LIMIT 1;


/* 5. Who is the best customer? The customer who has spent the most money will be declared the best customer. 
Write a query that returns the person who has spent the most money.*/

SELECT c.customer_id, first_name, last_name, ROUND(SUM(i.total),2) AS Total_Spending
FROM customer c
JOIN invoice i
ON c.customer_id = i.customer_id
GROUP BY c.customer_id, first_name, last_name
ORDER BY Total_Spending DESC
LIMIT 1;


-- MODERATE

/* 1. Write query to return the email, first name, last name, & Genre of all Rock Music listeners. 
Return your list ordered alphabetically by email starting with A. */

SELECT DISTINCT c.email AS Email, c.first_name, c.last_name, g.name AS Genre
FROM customer c
JOIN invoice i ON i.customer_id = c.customer_id
JOIN invoice_line vl ON vl.invoice_id = i.invoice_id
JOIN track t ON t.track_id = vl.track_id
JOIN genre g ON g.genre_id = t.genre_id
WHERE g.name LIKE 'Rock'
ORDER BY Email;


/* 2. Let's invite the artists who have written the most rock music in our dataset. 
Write a query that returns the Artist name and total track count of the top 10 rock bands. */

SELECT artist.name AS Artists, COUNT(track.track_id) AS Total_track
FROM artist
JOIN album2 ON album2.artist_id = artist.artist_id
JOIN track ON track.album_id = album2.album_id
JOIN genre ON genre.genre_id = track.genre_id
WHERE genre.name LIKE 'Rock'
GROUP BY Artists
ORDER BY Total_track DESC
LIMIT 10;


/* 3. Return all the track names that have a song length longer than the average song length. 
Return the Name and Milliseconds for each track. Order by the song length with the longest songs listed first. */

SELECT name, milliseconds
FROM track
WHERE milliseconds > ( 
	    SELECT AVG(milliseconds) AS Avg_milliseconds 
            FROM track)
ORDER BY milliseconds DESC;


-- Advance


/* 1. Find how much amount spent by each customer on artists? Write a query to return customer name, artist name and total spent */

WITH best_selling_artist AS(
SELECT artist.artist_id, artist.name AS artist_name, 
SUM(invoice_line.unit_price*invoice_line.quantity) AS Total_sales
FROM invoice_line 
JOIN track ON track.track_id = invoice_line.track_id
JOIN album2 ON album2.album_id = track.album_id
JOIN artist ON artist.artist_id = album2.artist_id
GROUP BY 1,2
ORDER BY 3 DESC
LIMIT 1
)

SELECT c.customer_id, c.first_name, c.last_name, bsa.artist_name,
ROUND(SUM(il.unit_price*il.quantity),2) AS Total_Spent
FROM customer c
JOIN invoice i ON i.customer_id = c.customer_id
JOIN invoice_line il ON il.invoice_id = i.invoice_id
JOIN track t ON t.track_id = il.track_id
JOIN album2 alb ON alb.album_id = t.album_id
JOIN best_selling_artist bsa ON bsa.artist_id = alb.artist_id
GROUP BY 1,2,3,4
ORDER BY 5 DESC;


/* 2. We want to find out the most popular music Genre for each country. We determine the most popular genre as the genre 
with the highest amount of purchases. Write a query that returns each country along with the top Genre. For countries where 
the maximum number of purchases is shared return all Genres. */

/* Steps to Solve:  There are two parts in question- first most popular music genre and second need data at country level. */

WITH most_popular_genre AS(
SELECT customer.country AS Country, COUNT(invoice_line.quantity) AS Purchases,
genre.genre_id AS Genre_ID, genre.name AS Genre_Name,
ROW_NUMBER() OVER(PARTITION BY customer.country ORDER BY  COUNT(invoice_line.quantity) DESC) as rn
FROM customer 
JOIN invoice ON invoice.customer_id = customer.customer_id
JOIN invoice_line ON invoice_line.invoice_id = invoice.invoice_id
JOIN track ON track.track_id = invoice_line.track_id
JOIN genre ON genre.genre_id = track.genre_id
GROUP BY Country, genre.genre_id, genre.name
ORDER BY Country, Purchases DESC
)
SELECT Country, Purchases, Genre_ID, Genre_Name 
FROM most_popular_genre WHERE rn<=1


/* 3. Write a query that determines the customer that has spent the most on music for each country. 
Write a query that returns the country along with the top customer and how much they spent. 
For countries where the top amount spent is shared, provide all customers who spent this amount. */

/* Steps to Solve:  Similar to the above question. There are two parts in question- 
first, find the most spent on music for each country and second filter the data for respective customers. */

WITH customer_with_country AS 
(
SELECT customer.customer_id AS Customer_id, customer.first_name AS First_Name, customer.last_name AS Last_Name,
invoice.billing_country AS Country, ROUND(SUM(invoice.total),2) AS total_spent,
ROW_NUMBER() OVER(PARTITION BY invoice.billing_country ORDER BY SUM(invoice.total) DESC) AS rn
FROM customer
JOIN invoice ON invoice.customer_id = customer.customer_id
GROUP BY 1,2,3,4
ORDER BY 4, 5 DESC
)
SELECT Customer_id, First_Name, Last_Name, Country, total_spent 
FROM customer_with_country
WHERE rn<=1;

















































